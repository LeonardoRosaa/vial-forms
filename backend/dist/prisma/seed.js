"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("@prisma/client");
const data_1 = require("./data");
const client = new client_1.PrismaClient();
const deleteAllRecords = async () => {
    await client.$transaction([
        client.sourceData.deleteMany(),
        client.sourceRecord.deleteMany(),
        client.form.deleteMany(),
    ]);
    console.log('All records deleted');
};
const createAllRecords = async () => {
    const data = await (0, data_1.getSeedData)();
    await client.$transaction([
        client.form.createMany({ data: data.formData }),
        client.sourceRecord.createMany({ data: data.sourceRecordData }),
        client.sourceData.createMany({ data: data.sourceData }),
    ]);
    console.log('All records created');
};
async function seed() {
    await deleteAllRecords();
    await createAllRecords();
}
seed()
    .then(async () => {
    await client.$disconnect();
    console.log('database disconnected');
    process.exit(0);
})
    .catch(async (e) => {
    console.error(e);
    await client.$disconnect();
    process.exit(1);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3ByaXNtYS9zZWVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQTZDO0FBRTdDLGlDQUFvQztBQUVwQyxNQUFNLE1BQU0sR0FBRyxJQUFJLHFCQUFZLEVBQUUsQ0FBQTtBQUVqQyxNQUFNLGdCQUFnQixHQUFHLEtBQUssSUFBSSxFQUFFO0lBRWxDLE1BQU0sTUFBTSxDQUFDLFlBQVksQ0FBQztRQUN4QixNQUFNLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRTtRQUM5QixNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRTtRQUNoQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtLQUN6QixDQUFDLENBQUE7SUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUE7QUFDcEMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLElBQUksRUFBRTtJQUVsQyxNQUFNLElBQUksR0FBRyxNQUFNLElBQUEsa0JBQVcsR0FBRSxDQUFBO0lBRWhDLE1BQU0sTUFBTSxDQUFDLFlBQVksQ0FBQztRQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDL0MsTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDL0QsTUFBTSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0tBQ3hELENBQUMsQ0FBQTtJQUVGLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQTtBQUNwQyxDQUFDLENBQUE7QUFFRCxLQUFLLFVBQVUsSUFBSTtJQUNqQixNQUFNLGdCQUFnQixFQUFFLENBQUE7SUFDeEIsTUFBTSxnQkFBZ0IsRUFBRSxDQUFBO0FBQzFCLENBQUM7QUFFRCxJQUFJLEVBQUU7S0FDSCxJQUFJLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDZixNQUFNLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUMxQixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDcEMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNqQixDQUFDLENBQUM7S0FDRCxLQUFLLENBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxFQUFFO0lBQ2YsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNoQixNQUFNLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUMxQixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2pCLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmltcG9ydCB7IGdldFNlZWREYXRhIH0gZnJvbSAnLi9kYXRhJ1xuXG5jb25zdCBjbGllbnQgPSBuZXcgUHJpc21hQ2xpZW50KClcblxuY29uc3QgZGVsZXRlQWxsUmVjb3JkcyA9IGFzeW5jICgpID0+IHtcbiAgLy8gRGVsZXRpb24gb3JkZXIgaXMgaW1wb3J0YW50IGR1ZSB0byBub24tbnVsbCByZWxhdGlvbiBjb25zdHJhaW50cy5cbiAgYXdhaXQgY2xpZW50LiR0cmFuc2FjdGlvbihbXG4gICAgY2xpZW50LnNvdXJjZURhdGEuZGVsZXRlTWFueSgpLFxuICAgIGNsaWVudC5zb3VyY2VSZWNvcmQuZGVsZXRlTWFueSgpLFxuICAgIGNsaWVudC5mb3JtLmRlbGV0ZU1hbnkoKSxcbiAgXSlcblxuICBjb25zb2xlLmxvZygnQWxsIHJlY29yZHMgZGVsZXRlZCcpXG59XG5cbmNvbnN0IGNyZWF0ZUFsbFJlY29yZHMgPSBhc3luYyAoKSA9PiB7XG4gIC8vIERlbGV0aW9uIG9yZGVyIGlzIGltcG9ydGFudCBkdWUgdG8gbm9uLW51bGwgcmVsYXRpb24gY29uc3RyYWludHMuXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXRTZWVkRGF0YSgpXG5cbiAgYXdhaXQgY2xpZW50LiR0cmFuc2FjdGlvbihbXG4gICAgY2xpZW50LmZvcm0uY3JlYXRlTWFueSh7IGRhdGE6IGRhdGEuZm9ybURhdGEgfSksXG4gICAgY2xpZW50LnNvdXJjZVJlY29yZC5jcmVhdGVNYW55KHsgZGF0YTogZGF0YS5zb3VyY2VSZWNvcmREYXRhIH0pLFxuICAgIGNsaWVudC5zb3VyY2VEYXRhLmNyZWF0ZU1hbnkoeyBkYXRhOiBkYXRhLnNvdXJjZURhdGEgfSksXG4gIF0pXG5cbiAgY29uc29sZS5sb2coJ0FsbCByZWNvcmRzIGNyZWF0ZWQnKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzZWVkKCkge1xuICBhd2FpdCBkZWxldGVBbGxSZWNvcmRzKClcbiAgYXdhaXQgY3JlYXRlQWxsUmVjb3JkcygpXG59XG5cbnNlZWQoKVxuICAudGhlbihhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgY2xpZW50LiRkaXNjb25uZWN0KClcbiAgICBjb25zb2xlLmxvZygnZGF0YWJhc2UgZGlzY29ubmVjdGVkJylcbiAgICBwcm9jZXNzLmV4aXQoMClcbiAgfSlcbiAgLmNhdGNoKGFzeW5jIGUgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoZSlcbiAgICBhd2FpdCBjbGllbnQuJGRpc2Nvbm5lY3QoKVxuICAgIHByb2Nlc3MuZXhpdCgxKVxuICB9KVxuIl19